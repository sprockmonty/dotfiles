return {
  'milanglacier/minuet-ai.nvim',
  config = function()
    local gemini_prompt = [[
You are the backend of an AI-powered code completion engine. Your task is to
provide code suggestions based on the user's input. The user's code will be
enclosed in markers:

- `<contextAfterCursor>`: Code context after the cursor
- `<cursorPosition>`: Current cursor location
- `<contextBeforeCursor>`: Code context before the cursor
]]

    local gemini_few_shots = {}

    gemini_few_shots[1] = {
      role = 'user',
      content = [[
# language: go
<contextBeforeCursor>
func fibonacci(i int) []int:
    <cursorPosition>
<contextAfterCursor>

f := fibonacci(5)]],
    }

    local gemini_chat_input_template =
      '{{{language}}}\n{{{tab}}}\n<contextBeforeCursor>\n{{{context_before_cursor}}}<cursorPosition>\n<contextAfterCursor>\n{{{context_after_cursor}}}'

    gemini_few_shots[2] = require('minuet.config').default_few_shots[2]

    require('minuet').setup {
      provider = 'gemini',
      provider_options = {
        gemini = {
          model = 'gemini-2.0-flash-exp',
          system = {
            prompt = gemini_prompt,
          },
          few_shots = gemini_few_shots,
          chat_input = {
            template = gemini_chat_input_template,
          },
          optional = {
            generationConfig = {
              maxOutputTokens = 1024,
              topP = 0.9,
            },
            safetySettings = {
              {
                category = 'HARM_CATEGORY_DANGEROUS_CONTENT',
                threshold = 'BLOCK_NONE',
              },
              {
                category = 'HARM_CATEGORY_HATE_SPEECH',
                threshold = 'BLOCK_NONE',
              },
              {
                category = 'HARM_CATEGORY_HARASSMENT',
                threshold = 'BLOCK_NONE',
              },
              {
                category = 'HARM_CATEGORY_SEXUALLY_EXPLICIT',
                threshold = 'BLOCK_NONE',
              },
            },
          },
          api_key = function()
            return 'replace-me-with-key'
          end,
        },
      },
    }
  end,
}
